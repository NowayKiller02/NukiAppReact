[
    {
        "id": "44686ed61e1d9d3b",
        "type": "tab",
        "label": "Flow NUKI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "e1a546d3f1caf427",
        "type": "http in",
        "z": "44686ed61e1d9d3b",
        "name": "App posts user email",
        "url": "/login",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "657ba2faa43d7b25",
                "9f8701fab26c5955",
                "d30420f3674ec75a"
            ]
        ]
    },
    {
        "id": "657ba2faa43d7b25",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "Set user email to global var",
        "func": "global.set(\"email\", msg.payload);\n\nvar userEmail = global.get(\"email\");\n\nmsg.topic = \"SELECT userkey FROM users WHERE email = \" + userEmail + \";\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 120,
        "wires": [
            [
                "f35b6a0feba192f1",
                "0256eff2a9f34bb5"
            ]
        ]
    },
    {
        "id": "9f8701fab26c5955",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "User Email",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 390,
        "y": 80,
        "wires": []
    },
    {
        "id": "277032c29946fa3a",
        "type": "http response",
        "z": "44686ed61e1d9d3b",
        "name": "Respond status to login",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 200,
        "wires": []
    },
    {
        "id": "0256eff2a9f34bb5",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Query",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 80,
        "wires": []
    },
    {
        "id": "dc71e7d3ae0de32e",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "Set Key to global var",
        "func": "global.set(\"key1\", msg.payload);\n\nvar userKey1 = global.get(\"key1\");\n\nif(userKey1 == \"\")\n{\n    msg.payload = \"There is no key available for user \" + global.get(\"email\");\n    msg.to = global.get(\"email\");\n    msg.topic = \"Nuki key\";\n    return msg;\n}\n\nelse\n{\n    msg.payload = \"Hi there! Your key to use the Nuki is: \" + JSON.stringify(userKey1[0].userkey);\n    msg.to = global.get(\"email\");\n    msg.topic = \"Nuki key\";\n    return msg;\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 120,
        "wires": [
            [
                "aa9c2cc67eef69a7",
                "338094dbfa735260"
            ]
        ]
    },
    {
        "id": "65be76212f2906c0",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Key Value",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "aa9c2cc67eef69a7",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 80,
        "wires": []
    },
    {
        "id": "1ad3f54e22f059c4",
        "type": "http in",
        "z": "44686ed61e1d9d3b",
        "name": "App posts email + key",
        "url": "/key",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "5cb9eb4c30e6fde3",
                "dc1ac1e5673197c5",
                "2d69fbcb4eb3abad"
            ]
        ]
    },
    {
        "id": "5cb9eb4c30e6fde3",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "Set Key as global var",
        "func": "global.set(\"key2\", msg.payload.key);\nglobal.set(\"email2\", msg.payload.email);\nvar message2 = { payload: \"\",topic:\"\"};\n\nvar userKey2 = global.get(\"key2\");\n\nmessage2.topic =  \"SELECT * FROM users WHERE userkey = \\\"\" + userKey2 + \"\\\" ;\";\n\nreturn message2;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 340,
        "wires": [
            [
                "76e350f53fc11c4f",
                "b0cddc8a381a4d45"
            ]
        ]
    },
    {
        "id": "dc1ac1e5673197c5",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "User Key",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 300,
        "y": 300,
        "wires": []
    },
    {
        "id": "b0cddc8a381a4d45",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Query",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 300,
        "wires": []
    },
    {
        "id": "434a8a7d39ae50b6",
        "type": "http response",
        "z": "44686ed61e1d9d3b",
        "name": "Respond status to key",
        "statusCode": "",
        "headers": {},
        "x": 760,
        "y": 420,
        "wires": []
    },
    {
        "id": "5266b2ad49dc134c",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "To Grant Permissions Or Not",
        "func": "var message = {topic:\"\"};\nif ( msg.payload[0].email == global.get(\"email2\"))\n{\n    message.payload = \"true\";\n    global.set(\"permission\", message.payload);\n}\n\nelse\n{\n    message.payload = \"false\";\n    global.set(\"permission\", message.payload);\n}\n\nreturn message;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 340,
        "wires": [
            [
                "d4967b2a5d170fa2"
            ]
        ]
    },
    {
        "id": "d4967b2a5d170fa2",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Result",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1100,
        "y": 340,
        "wires": []
    },
    {
        "id": "9ed257fbf4643ef6",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "Set permission",
        "func": "msg.payload = global.get(\"permission\");\nglobal.set(\"permission\", \"false\");\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 420,
        "wires": [
            [
                "434a8a7d39ae50b6"
            ]
        ]
    },
    {
        "id": "f35b6a0feba192f1",
        "type": "mysql",
        "z": "44686ed61e1d9d3b",
        "mydb": "97f6da09d164d58c",
        "name": "User Database",
        "x": 720,
        "y": 120,
        "wires": [
            [
                "dc71e7d3ae0de32e",
                "65be76212f2906c0"
            ]
        ]
    },
    {
        "id": "76e350f53fc11c4f",
        "type": "mysql",
        "z": "44686ed61e1d9d3b",
        "mydb": "97f6da09d164d58c",
        "name": "User Database",
        "x": 600,
        "y": 340,
        "wires": [
            [
                "5266b2ad49dc134c",
                "e56fe29f50fb5176"
            ]
        ]
    },
    {
        "id": "338094dbfa735260",
        "type": "e-mail",
        "z": "44686ed61e1d9d3b",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "tls": true,
        "name": "",
        "dname": "Send Key to User",
        "x": 1210,
        "y": 120,
        "wires": []
    },
    {
        "id": "e56fe29f50fb5176",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Result Database",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 300,
        "wires": []
    },
    {
        "id": "2d69fbcb4eb3abad",
        "type": "delay",
        "z": "44686ed61e1d9d3b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 300,
        "y": 420,
        "wires": [
            [
                "9ed257fbf4643ef6"
            ]
        ]
    },
    {
        "id": "d30420f3674ec75a",
        "type": "delay",
        "z": "44686ed61e1d9d3b",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "276d6dadbf6cb044"
            ]
        ]
    },
    {
        "id": "276d6dadbf6cb044",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "Set respons for yuran",
        "func": "var userKey2 = global.get(\"key1\");\n\nif(userKey2 == \"\")\n{\n    msg.payload = \"false\";\n    return msg;\n}\n\nelse\n{\n    msg.payload = \"true\";\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 200,
        "wires": [
            [
                "277032c29946fa3a"
            ]
        ]
    },
    {
        "id": "a9c52a1c437fce2e",
        "type": "http in",
        "z": "44686ed61e1d9d3b",
        "name": "Log event",
        "url": "/log",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 60,
        "y": 540,
        "wires": [
            [
                "b577988518145d1a",
                "8f683e10cd41d40d",
                "e109acee9defe5c9"
            ]
        ]
    },
    {
        "id": "b577988518145d1a",
        "type": "function",
        "z": "44686ed61e1d9d3b",
        "name": "Insert event into database",
        "func": "global.set(\"email3\", msg.payload.email);\nglobal.set(\"open_or_close\", msg.payload.open_or_close);\nvar email3 = global.get(\"email3\");\nvar status = global.get(\"open_or_close\");\nvar message3 = { payload: \"\",topic:\"\"};\nconsole.log(email3);\nconsole.log(status);\nmessage3.topic =  \"INSERT INTO log (time, user, open_or_closed) values (now(),\\\"\" + global.get(\"email3\") + \"\\\",\" + global.get(\"open_or_close\") + \");\";\n\nreturn message3;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 540,
        "wires": [
            [
                "c8db363bbe9d624f",
                "96b75f2f16943e5e"
            ]
        ]
    },
    {
        "id": "c8db363bbe9d624f",
        "type": "mysql",
        "z": "44686ed61e1d9d3b",
        "mydb": "97f6da09d164d58c",
        "name": "User Database",
        "x": 600,
        "y": 540,
        "wires": [
            [
                "abd07e00650426ea"
            ]
        ]
    },
    {
        "id": "abd07e00650426ea",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Event Logged",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 540,
        "wires": []
    },
    {
        "id": "8f683e10cd41d40d",
        "type": "http response",
        "z": "44686ed61e1d9d3b",
        "name": "Respond to Log",
        "statusCode": "",
        "headers": {},
        "x": 280,
        "y": 600,
        "wires": []
    },
    {
        "id": "e109acee9defe5c9",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Log Event",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 260,
        "y": 500,
        "wires": []
    },
    {
        "id": "96b75f2f16943e5e",
        "type": "debug",
        "z": "44686ed61e1d9d3b",
        "name": "Result Query",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 500,
        "wires": []
    },
    {
        "id": "97f6da09d164d58c",
        "type": "MySQLdatabase",
        "name": "users database",
        "host": "127.0.0.1",
        "port": "3306",
        "db": "nukidb",
        "tz": "",
        "charset": "UTF8"
    }
]